header:
    menu:
        home: Portfolio
        fr: FR
        en: EN
        about: 'A propos de moi'
        contact: 'Contactez-moi'

index:
    page_title: 'Mon portfolio - Cédric Merouani'
    job_title: Developpeur
    job_description: 'Backend principalement, mais aussi frontend et devOps à mes heures perdues (parait qu''il faut dire fullstack...)'
    filters:
        all:
            label: Tout
            tag: '*'
        web:
            label: Web
            tag: web
        video_games:
            label: 'Jeux vidéos'
            tag: games
        mobile:
            label: Mobile
            tag: mobile
        devops:
            label: DevOps
            tag: devops
project:
    description:
        label: Description
    team:
        label: Taille de l'équipe
    date:
        label: Année
    category:
        label: Categorie
    links:
        label: Technos
    navigation:
        previous:
            label: PRECEDENT
        next:
            label: SUIVANT

project1:
    title: 'Ce blog'
    description:
        content: >
            <p>Je voulais profiter de l’occasion de refaire mon portfolio pour mettre en commun certains outils. Certains que je connaissais déjà tel que <b>Docker</b> ou encore d’autre dont j’ai juste entendu parler comme <b>Brunch</b>.</p>
            <p>Ce portfolio utilise <b>Silex</b> comme micro-framework PHP. Utile pour de petits projets parce qu’il permet d’intégrer des composants <b>Symfony2</b> à la demande.</p>
            <p>Je voulais tester le serveur <b>Caddy</b> au lieu d’utiliser Nginx. Caddy est un serveur qui se présente sous la forme d’un binaire à lancer et accompagné d’un fichier de conf très simple à prendre en main.</p>
            <p><b>Brunch</b> est l’outil qui me permet de compiler/optimiser mes assets (comme gulp). Premier essai avec cet outil, il semble parfaitement convenir au besoin d’un blog/portfolio pour sa facilité d’utilisation.</p>
            <p>Tout est dockerisé, ce qui me permet de déployer chaque changement très simplement sur mon serveur. Et <b>Docker Compose</b> me permet de gérer facilement les différents environnements dev/prod.</p>
project2:
    title: 'Alfred'
    description:
        content: >
            <p><b>Alfred</b> est un set d’applications basé sur <b>Docker</b> qui permet de faire de l'intégration et du déploiement continu. L’objectif d’Alfred est de monter et tester des projets en utilisant des serveurs DigitalOcean à la demande.</p>
            <p>On peut retenir certains composants présents dans Alfred : <b>Jenkins</b>, <b>Samson</b> ou encore <b>Spawner</b> qui est une application PHP.</p>
            <p>L’idée est de pouvoir tester chaque pull request d’un repository Git avant de pouvoir merger les modifications sur la branche master (PHPUnit, ESLINT, PHPCS, Behat, Nightwatch…).</p>
            <p>Et <b>Samson</b> offrait une interface pratique pour le staging en déployant une branche spécifique sur un environnement précis (recette, preprod ou production).</p>
project3:
    title: 'Softdev'
    description:
        content: >
            <p>Lorsque nous travaillions deux de mes amis et moi-même sur Softdev, nous voulions offrir une manière simple aux PMEs d'avoir et de gérer de petits sites internet à travers Facebook.</p>
            <p>L'idée était de leur créer un site vitrine qui utiliserait leur page Facebook Pro en tant que contenu. C'était une manière de leur offrir de la visibilité et une page personnelle à un coût moindre.</p>
            <p>Techniquement nous communiquions avec l'API de Facebook pour mettre en cache toutes les informations nécessaires côté client nous avions un site suffisamment granulaire et dynamique pour gérer les différents types de contenus : articles, photos et albums, vidéos, les statuts...</p>
            <p>Le site était divisé en différents block (merci Twig) et le client avait la possibilité de choisir si tel ou tel block devait être activé ou non sur son site.</p>
